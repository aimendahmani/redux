const redux = require('redux')
const createStore = redux.createStore 
const combineReducers = redux.combineReducers
// action
const BUY_CAKE = 'BUY_CAKE'
const BUY_ICREAM = 'BUY_ICECREAM'

function buyCake(){
return {
type:BUY_CAKE,
}
}

function buyIceCream(){
return {
type:BUY_IceCream,
}
}

// state
const initialCakeState = {
nomOfCakes:10
}
const initialIceCreamState = {
nomOfIceCrem:20
}

// reducer
const cakeReducer = (state=initialCakeSate, action) => {
switch(action.type){
case BUY_CAKE : return {
...state //javascript es6 spread operator to make copy of the state
numOfCakes : state.numOfCakes - 1
}
default : return state
}
}

const iceCreamReducer = (state=initialIceCreamSate, action) => {
switch(action.type){
case BUY_ICECREAM : return {
...state //javascript es6 spread operator to make copy of the state
numOfIceCream : state.numOfIceCream - 1
}
default : return state
}
}

//combine reducers
const rootReducer = combineReducers(
{
  'cake':cakeReducer,
  'iceCream':iceCreamReducer,
}
)
// store
const store = createStore(rootReducer)
console.log('initial state: ', store.getState())
const unsubscribe = store.subscribe(()=>console.log('updates state :',store.getState())
store.dispatch(buyCake())
unsubscribe()
